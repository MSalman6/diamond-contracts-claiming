/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { ClaimContract, ClaimContractInterface } from "../ClaimContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_lateClaimBeneficorAddressReinsertPot",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_lateClaimBeneficorAddressDAO",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_prefixStr",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_dilute_s1_75_timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_dilute_s2_50_timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_dilute_s3_0_timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ClaimErrorNoBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "ClaimErrorSignatureMissmatch",
    type: "error",
  },
  {
    inputs: [],
    name: "CryptoInvalidV",
    type: "error",
  },
  {
    inputs: [],
    name: "DiluteAllreadyHappened",
    type: "error",
  },
  {
    inputs: [],
    name: "DiluteTimeNotReached",
    type: "error",
  },
  {
    inputs: [],
    name: "FillErrorAccountAlreadyDefined",
    type: "error",
  },
  {
    inputs: [],
    name: "FillErrorAccountZero",
    type: "error",
  },
  {
    inputs: [],
    name: "FillErrorBalanceDoubleFill",
    type: "error",
  },
  {
    inputs: [],
    name: "FillErrorBalanceSumError",
    type: "error",
  },
  {
    inputs: [],
    name: "FillErrorBalanceZero",
    type: "error",
  },
  {
    inputs: [],
    name: "FillErrorNumberOfAccountsMissmatch",
    type: "error",
  },
  {
    inputs: [],
    name: "FillErrorValueRequired",
    type: "error",
  },
  {
    inputs: [],
    name: "InitializationErrorDaoAddressNull",
    type: "error",
  },
  {
    inputs: [],
    name: "InitializationErrorDiluteTimestamp1",
    type: "error",
  },
  {
    inputs: [],
    name: "InitializationErrorDiluteTimestamp2",
    type: "error",
  },
  {
    inputs: [],
    name: "InitializationErrorDiluteTimestamp3",
    type: "error",
  },
  {
    inputs: [],
    name: "InitializationErrorReinsertPotAddressNull",
    type: "error",
  },
  {
    inputs: [],
    name: "PredecessorDiluteEventNotHappened",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes20",
        name: "_from",
        type: "bytes20",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_nominator",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_denominator",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    inputs: [],
    name: "LEAP_YEAR_IN_SECONDS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "YEAR_IN_SECONDS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes20",
        name: "",
        type: "bytes20",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "calcHash256",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "calculateAddressString",
    outputs: [
      {
        internalType: "bytes",
        name: "addrStr",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_targetAdress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_postfix",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_pubKeyX",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_pubKeyY",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_claimToAddr",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_postFix",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_pubKeyX",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_pubKeyY",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "claimMessageMatchesSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_claimToAddr",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_postfix",
        type: "bytes",
      },
    ],
    name: "createClaimMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deploymentTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dilute1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dilute2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dilute3",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dilute_s1_75_timestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dilute_s2_50_timestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dilute_s3_0_timestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dilution_s1_75_executed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dilution_s2_50_executed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dilution_s3_0_executed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes20[]",
        name: "_accounts",
        type: "bytes20[]",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
    ],
    name: "fill",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentDilutedClaimFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "nominator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDilutionTimestamp1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDilutionTimestamp2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDilutionTimestamp3",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_claimToAddr",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_postfix",
        type: "bytes",
      },
    ],
    name: "getHashForClaimMessage",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lateClaimBeneficorAddressDAO",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lateClaimBeneficorAddressReinsertPot",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prefixStr",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "pubKeyX",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "pubKeyY",
        type: "bytes32",
      },
    ],
    name: "pubKeyToEthAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_publicKeyX",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_publicKeyY",
        type: "bytes32",
      },
    ],
    name: "publicKeyToBitcoinAddress",
    outputs: [
      {
        internalType: "bytes20",
        name: "rawBtcAddress",
        type: "bytes20",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162003dc638038062003dc68339818101604052810190620000379190620005b8565b620000536775b9b59a28228b1f60c01b6200057f60201b60201c565b6200006f67e156ba03a17724d860c01b6200057f60201b60201c565b6200008b67e9e9e0b9bac9841660c01b6200057f60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16036200010e57620000dc678db2e843b26d874c60c01b6200057f60201b60201c565b6040517f125f3ccd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6200012a6720afebd31c129fdf60c01b6200057f60201b60201c565b6200014667f51cd83bd5a0d84b60c01b6200057f60201b60201c565b620001626747ee99199091329660c01b6200057f60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603620001e557620001b36709f7be0bee54443060c01b6200057f60201b60201c565b6040517f9e719f5100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b62000201674ae9a29ff7bc3e0f60c01b6200057f60201b60201c565b6200021d671e0ce1f814d8796160c01b6200057f60201b60201c565b62000239673d6ba77db026784860c01b6200057f60201b60201c565b4283116200028f576200025d678cb9702596df49ac60c01b6200057f60201b60201c565b6040517f1b96329300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b620002ab67d25f4d96964dd3f960c01b6200057f60201b60201c565b620002c767526289c8740e800160c01b6200057f60201b60201c565b620002e3671c5fc7228201498e60c01b6200057f60201b60201c565b82821162000339576200030767b065e2a0a843befb60c01b6200057f60201b60201c565b6040517f7538bb6800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6200035567e7d383886060c00360c01b6200057f60201b60201c565b6200037167d42dcf2de5bb093960c01b6200057f60201b60201c565b6200038d677c11397d4e7cfd6460c01b6200057f60201b60201c565b818111620003e357620003b1675dcdc4070c65aa9d60c01b6200057f60201b60201c565b6040517faec39bfd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b620003ff677ab4237f63ddccd660c01b6200057f60201b60201c565b6200041b671aba7534b1b6967d60c01b6200057f60201b60201c565b85600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000478673ab54d9bd9ec8df160c01b6200057f60201b60201c565b84600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620004d567cad8245e0c3078fc60c01b6200057f60201b60201c565b8360089081620004e6919062000792565b506200050367b79842303304fa3560c01b6200057f60201b60201c565b42600581905550620005266750ca425bda13a86660c01b6200057f60201b60201c565b826000819055506200054967fbaee0f27a03908960c01b6200057f60201b60201c565b816001819055506200056c6756dd1a2f9849f58060c01b6200057f60201b60201c565b806002819055505050505050506200086b565b50565b60008151905060018060a01b03811681146200059d57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060c08789031215620005d257600080fd5b620005dd8762000582565b95506020620005ee81890162000582565b9550604088015160018060401b03808211156200060a57600080fd5b818a0191508a601f8301126200061f57600080fd5b815181811115620006355762000634620005a2565b5b601f1960405181603f83601f8601160116810191508082108483111715620006625762000661620005a2565b5b816040528281528d868487010111156200067b57600080fd5b600093505b82841015620006a057858486010151868583010152858401935062000680565b6000868483010152809950505050505050606087015192506080870151915060a087015190509295509295509295565b60008160011c90506001821680620006e957607f821691505b6020821081036200070a57634e487b7160e01b600052602260045260246000fd5b50919050565b806000525060006020600020905090565b601f8211156200077357600081815260208120601f850160051c810160208610156200074b578190505b601f850160051c820191505b818110156200076f5782815560018101905062000757565b5050505b505050565b60008260011b6000198460031b1c19831617905092915050565b815160018060401b03811115620007ae57620007ad620005a2565b5b620007c681620007bf8454620006d0565b8462000721565b60006020809150601f831160018114620007ff5760008415620007ea578387015190505b620007f6858262000778565b86555062000863565b601f1984166200080f8662000710565b60005b8281101562000837578589015182556001820191508486019550848101905062000812565b508582101562000857578488015160001960f88860031b161c1981168255505b505060018460011b0185555b505050505050565b61354b806200087b6000396000f3fe6080604052600436106101c25760003560e01c80637847ea53116100f7578063a12a1b9f11610095578063e77b9d9b11610064578063e77b9d9b14610665578063f07e60a8146106a2578063f2113dc9146106be578063fa4ee75a146106fb576101c2565b8063a12a1b9f146105a7578063b28297f8146105e4578063bfc12c051461060f578063e20fb74f1461063a576101c2565b806384f0145e116100d157806384f0145e146104e95780638c86a100146105145780639365fe0b1461053f578063951e3c3b1461056a576101c2565b80637847ea53146104445780637b99c36d1461046f5780638019f8d2146104ac576101c2565b806334945f46116101645780635e3eabaa1161013e5780635e3eabaa1461039857806364e7c23a146103c357806367bb0f95146103ee5780636a01acad14610419576101c2565b806334945f46146103055780634e2ac9bf146103425780635b33bef31461036d576101c2565b80631b17d9a8116101a05780631b17d9a8146102465780632e5b74581461027157806330c1a7851461029d57806331b4cd47146102da576101c2565b8063069df228146101c75780630be89cc4146101f057806318b46f581461021b575b600080fd5b3480156101d357600080fd5b506101ee60048036038101906101e99190612d1e565b610726565b005b3480156101fc57600080fd5b50610205610aa4565b6040516102129190612da7565b60405180910390f35b34801561022757600080fd5b50610230610aca565b60405161023d9190612da7565b60405180910390f35b34801561025257600080fd5b5061025b610af0565b6040516102689190612dc0565b60405180910390f35b34801561027d57600080fd5b50610286610b03565b604051610294929190612dd3565b60405180910390f35b3480156102a957600080fd5b506102c460048036038101906102bf9190612deb565b610cc0565b6040516102d19190612e10565b60405180910390f35b3480156102e657600080fd5b506102ef610d32565b6040516102fc9190612e29565b60405180910390f35b34801561031157600080fd5b5061032c60048036038101906103279190612e3a565b610d38565b6040516103399190612e8c565b60405180910390f35b34801561034e57600080fd5b50610357610d90565b6040516103649190612e29565b60405180910390f35b34801561037957600080fd5b50610382611037565b60405161038f9190612e29565b60405180910390f35b3480156103a457600080fd5b506103ad611296565b6040516103ba9190612ec7565b60405180910390f35b3480156103cf57600080fd5b506103d8611324565b6040516103e59190612dc0565b60405180910390f35b3480156103fa57600080fd5b50610403611337565b6040516104109190612e29565b60405180910390f35b34801561042557600080fd5b5061042e61133f565b60405161043b9190612e29565b60405180910390f35b34801561045057600080fd5b50610459611385565b6040516104669190612e29565b60405180910390f35b34801561047b57600080fd5b5061049660048036038101906104919190612efc565b61138d565b6040516104a39190612e8c565b60405180910390f35b3480156104b857600080fd5b506104d360048036038101906104ce9190612f3a565b61148f565b6040516104e09190612dc0565b60405180910390f35b3480156104f557600080fd5b506104fe611699565b60405161050b9190612e29565b60405180910390f35b34801561052057600080fd5b506105296116df565b6040516105369190612e29565b60405180910390f35b34801561054b57600080fd5b506105546116e5565b6040516105619190612e29565b60405180910390f35b34801561057657600080fd5b50610591600480360381019061058c9190612e3a565b6119c6565b60405161059e9190612ec7565b60405180910390f35b3480156105b357600080fd5b506105ce60048036038101906105c99190612fc3565b611acb565b6040516105db9190612ec7565b60405180910390f35b3480156105f057600080fd5b506105f9611fa2565b6040516106069190612e29565b60405180910390f35b34801561061b57600080fd5b50610624611fe8565b6040516106319190612e29565b60405180910390f35b34801561064657600080fd5b5061064f611fee565b60405161065c9190612e29565b60405180910390f35b34801561067157600080fd5b5061068c60048036038101906106879190612deb565b611ff4565b6040516106999190612fea565b60405180910390f35b6106bc60048036038101906106b791906130cc565b612117565b005b3480156106ca57600080fd5b506106e560048036038101906106e09190613199565b6126bf565b6040516106f29190612e29565b60405180910390f35b34801561070757600080fd5b506107106126d7565b60405161071d9190612dc0565b60405180910390f35b61073a67fa1831453465bc0b60c01b6126ea565b61074e6723ad2312276b9b7660c01b6126ea565b610762675331250253d698f460c01b6126ea565b600061076e8686611ff4565b905061078467a84687e8192f7bab60c01b6126ea565b61079867253ceb2717ffe26a60c01b6126ea565b600060036000836bffffffffffffffffffffffff19166bffffffffffffffffffffffff191681526020019081526020016000205490506107e267de244d662875f6a960c01b6126ea565b6107f667c9b7727c657fc7f760c01b6126ea565b600081036108445761081267f8dc57f8331c001f60c01b6126ea565b6040517f80b71a9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108586754669c8ec3b4203d60c01b6126ea565b61086c67254f5bd170cfd41160c01b6126ea565b610880675d734ed0e37656a560c01b6126ea565b61088f8989898989898961148f565b6108d9576108a7673c2f7ac131c8808d60c01b6126ea565b6040517f5d7ed0c700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108ed67fc25ed55cbed785d60c01b6126ea565b61090167c8b17612d402f94160c01b6126ea565b61091567da5538b6f04b0ae060c01b6126ea565b600080610920610b03565b915091506109386734a95bf9da14664660c01b6126ea565b61094c675a8ccc4a8354d82c60c01b6126ea565b600081838561095b91906131d2565b61096591906131f4565b905061097b671e43d3b7b8d7b36660c01b6126ea565b600060036000876bffffffffffffffffffffffff19166bffffffffffffffffffffffff19168152602001908152602001600020819055506109c667991945b6d81b1a9760c01b6126ea565b6109da670dddb802c8c9c72060c01b6126ea565b8b73ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610a20573d6000803e3d6000fd5b50610a3567669b8d3dddd1cb8260c01b6126ea565b610a4967bb26999b341875f660c01b6126ea565b846bffffffffffffffffffffffff19167f87263350249c13bda2939c89dcb517d838e9f0c19d1e9546de822a2d75e2204b8d838686604051610a8e949392919061321c565b60405180910390a2505050505050505050505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900460ff1681565b600080610b1a6782036497ed8799a960c01b6126ea565b610b2e673292b8695b3ed5ac60c01b6126ea565b610b4267f55d12ab270a29ac60c01b6126ea565b600460009054906101000a900460ff16610b9e57610b6a67b8140c7967db27b560c01b6126ea565b610b7e6719403d7e5eff20cb60c01b6126ea565b610b926722af68c675cddba460c01b6126ea565b60048091509150610cbc565b610bb267253a9bf21cd8f92e60c01b6126ea565b610bc667fafc3d654435cc2260c01b6126ea565b600460019054906101000a900460ff16610c2357610bee67faa5418c706130f260c01b6126ea565b610c026758b4184385149e1060c01b6126ea565b610c166758a2dc1334bd0c4a60c01b6126ea565b6003600491509150610cbc565b610c366614dcb4b4bc36ad60c01b6126ea565b610c4a67c95529db7ca7569d60c01b6126ea565b600460029054906101000a900460ff16610ca757610c7267eb5a3b27a7d991f560c01b6126ea565b610c86674ca1cc1a9057aa1560c01b6126ea565b610c9a67c83061f9d007646360c01b6126ea565b6002600491509150610cbc565b610cbb679c172ba18ffb96f860c01b6126ea565b5b9091565b6000610cd667a402a7083735827a60c01b6126ea565b610cea6757740b5de78f286660c01b6126ea565b610cfe67204fcbb27365fa4960c01b6126ea565b8282604051602001610d1192919061324a565b6040516020818303038152906040528051906020012060001c905092915050565b60015481565b6000610d4e67e4f7cee7dcc1e3a760c01b6126ea565b610d6267c09fb6ff6c1503c560c01b6126ea565b610d76679f383363deca6cd660c01b6126ea565b610d88610d8384846119c6565b61138d565b905092915050565b6000610da667040b6bd68d8db78560c01b6126ea565b610dba670ae8f8fc8755936660c01b6126ea565b610dce67a4a18a92ae2779bd60c01b6126ea565b610dd6611699565b421015610e2357610df167ba016b27e55b7d1f60c01b6126ea565b6040517f153d51b900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e3767970d2b89ecc0a44660c01b6126ea565b610e4b67a55fcdceead29bf960c01b6126ea565b610e5f67071874cb9a0a645a60c01b6126ea565b600460019054906101000a900460ff16610eb957610e8767468cda73e34b8ec760c01b6126ea565b6040517f1e5a53d300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ecd67f550c98a35cb929b60c01b6126ea565b610ee167e83e8eb11c60e0ee60c01b6126ea565b610ef567c141c782ea31d6be60c01b6126ea565b600460029054906101000a900460ff1615610f5057610f1e67d2d11a4fc47297bc60c01b6126ea565b6040517f598347c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f64677cf9bdc6ed0d8fb460c01b6126ea565b610f7867cf36ca99cdcf8c5b60c01b6126ea565b6001600460026101000a81548160ff021916908315150217905550610fa767b253c335bd8ba01160c01b6126ea565b610fbb67b5dca7d89fa0a06660c01b6126ea565b60003073ffffffffffffffffffffffffffffffffffffffff16319050610feb67034143547cc9547760c01b6126ea565b610fff679b5314367745548d60c01b6126ea565b611008816126ed565b61101c67fa73597083e6e97d60c01b6126ea565b61103067034a98ac66dc297860c01b6126ea565b8091505090565b600061104d67465bdf24c39b60bc60c01b6126ea565b61106167893ee43bda015af960c01b6126ea565b6110756710b80a0af34bf99560c01b6126ea565b61107d611fa2565b4210156110ca576110986712a2426edb53ea8960c01b6126ea565b6040517f153d51b900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110de67746c8be03ddb35ce60c01b6126ea565b6110f267c5da25909c03837b60c01b6126ea565b61110667cb47b2e04fa7db4d60c01b6126ea565b600460009054906101000a900460ff16156111755761112f67583b5569fa1350c760c01b6126ea565b611143671e03d7d22a070d8260c01b6126ea565b6040517f598347c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61118967ab345ba96902be6560c01b6126ea565b61119d67ad8b2771a7f4461860c01b6126ea565b6001600460006101000a81548160ff0219169083151502179055506111cc6710e15d57d5e3140760c01b6126ea565b6111e067394c8332f1be988760c01b6126ea565b60003073ffffffffffffffffffffffffffffffffffffffff1631905061121067989ed965b2d5d77760c01b6126ea565b6112246741bbeb2745a1381660c01b6126ea565b600060048261123391906131f4565b905061124967bbf6ad314cf216dd60c01b6126ea565b61125d67791160998c50803060c01b6126ea565b611266816126ed565b61127a673e75c32bb9652e1e60c01b6126ea565b61128e672a145079ab2d241960c01b6126ea565b809250505090565b600880546112a390613262565b80601f01602080910402602001604051908101604052809291908181526020018280546112cf90613262565b801561131c5780601f106112f15761010080835404028352916020019161131c565b820191906000526020600020905b8154815290600101906020018083116112ff57829003601f168201915b505050505081565b600460019054906101000a900460ff1681565b6301e2850081565b60006113556702ade90f92a76e3b60c01b6126ea565b61136967cda4243f6dc8ea6060c01b6126ea565b61137d679126dc7883c1d09960c01b6126ea565b600154905090565b6301e1338081565b60006113a367b3970ba3c1e29bd960c01b6126ea565b6113b767054cce9f295bd06560c01b6126ea565b6113cb6736a6e92609d9ecdc60c01b6126ea565b600280836040516113dc91906132be565b602060405180830381855afa1580156113f9573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061141c91906132dc565b60405160200161142c91906132f8565b60405160208183030381529060405260405161144891906132be565b602060405180830381855afa158015611465573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061148891906132dc565b9050919050565b60006114a5679344fd1ca4f1013b60c01b6126ea565b6114b967b35a66395a1517f060c01b6126ea565b6114cd67aef19366019d222f60c01b6126ea565b601b8460ff161080156114f057506114ef676927b1b1003e2a8260c01b612899565b5b8061151a5750601e8460ff16118015611519575061151867480c06167076a3f860c01b612899565b5b5b156115655761153367803a03b429df495960c01b6126ea565b6040517fc360d95200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611579678253c93be05155bd60c01b6126ea565b61158d671525be57b7c8b7b360c01b6126ea565b6115a167e347c4c0b356490e60c01b6126ea565b60006115ad8787610cc0565b90506115c367a028dda12acdac9460c01b6126ea565b6115d767b4cd9976f3aa968760c01b6126ea565b60006115e38a8a610d38565b90506115f9675ce9fe51e002bbbf60c01b6126ea565b61160d674645cabb2280f2f660c01b6126ea565b8173ffffffffffffffffffffffffffffffffffffffff16600182888888604051600081526020016040526040516116479493929190613309565b6020604051602081039080840390855afa158015611669573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff161492505050979650505050505050565b60006116af67236be2508a6a0cff60c01b6126ea565b6116c367461b04935a253c5760c01b6126ea565b6116d767024ee045183f005e60c01b6126ea565b600254905090565b60025481565b60006116fb67b990b848160f43db60c01b6126ea565b61170f674cf6b1446c126d2c60c01b6126ea565b6117236796cc8efc9212106a60c01b6126ea565b61172b61133f565b421015611778576117466703d9c7cfdd76df0460c01b6126ea565b6040517f153d51b900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61178c671dce55775f2f418760c01b6126ea565b6117a0675a3a3af042968aa160c01b6126ea565b6117b4671625be625b99c0b260c01b6126ea565b600460009054906101000a900460ff1661180e576117dc67fb84bce59e3a14a060c01b6126ea565b6040517f1e5a53d300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61182267cd85c9d24579080c60c01b6126ea565b6118366763d602d8fe2adf7a60c01b6126ea565b61184a67d915ad96ce841a3660c01b6126ea565b600460019054906101000a900460ff16156118a557611873674cdb675ff5dc04e260c01b6126ea565b6040517f598347c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6118b967b4ed0821ef6c02ef60c01b6126ea565b6118cd679ec4f082fc8296d060c01b6126ea565b6001600460016101000a81548160ff0219169083151502179055506118fc67b7161fe1b8c19c7b60c01b6126ea565b611910674922aae37367b61e60c01b6126ea565b60003073ffffffffffffffffffffffffffffffffffffffff1631905061194067f252de9d3251ae0f60c01b6126ea565b611954677e58edceee9e1ee360c01b6126ea565b600060038261196391906131f4565b905061197967e43932227c2bb02c60c01b6126ea565b61198d672afaaea8259cd63f60c01b6126ea565b611996816126ed565b6119aa673ce862ddf31fe85660c01b6126ea565b6119be672dee1d3c9e170fe560c01b6126ea565b809250505090565b60606119dc67ecc36640eacef30060c01b6126ea565b6119f06795f87297ac35762a60c01b6126ea565b611a046751f1f77f906e652860c01b6126ea565b6000611a0f84611acb565b9050611a256746fc764624c272d860c01b6126ea565b611a39673bdd6645fb52bfed60c01b6126ea565b60187f4469616d6f6e64205369676e6564204d6573736167653a0a000000000000000084516002806014611a6d9190613332565b60088054611a7a90613262565b9050611a86919061335a565b611a90919061335a565b611a9a919061335a565b60088487604051602001611ab396959493929190613390565b60405160208183030381529060405291505092915050565b6060611ae167f5dfe985534a56a360c01b6126ea565b611af567cb7aa4571e1715a360c01b6126ea565b611b0967084c872d47b169f160c01b6126ea565b600060026014611b199190613332565b60ff1667ffffffffffffffff811115611b3557611b34612c44565b5b6040519080825280601f01601f191660200182016040528015611b675781602001600182028036833780820191505090505b509050611b7e67243082381318dce560c01b6126ea565b611b92677f3b27bfe44aa59160c01b6126ea565b611bb5818460601b6bffffffffffffffffffffffff19166000601460ff166128a4565b611bc967a4244fa289a4687a60c01b6126ea565b611bdd67428c4c366c2b460660c01b6126ea565b600081805190602001209050611bfd671997efb9a826289e60c01b6126ea565b611c11672e43a2fc3fc8017460c01b6126ea565b6000611c2767f407964a2e07ab6860c01b6126ea565b611c3b679c47a1fdb97761d260c01b6126ea565b60005b601460ff16811015611d2c57611c5e67606472acd4fdaadc60c01b6126ea565b611c7267a61675eb9f5469b060c01b6126ea565b6000838260208110611c8757611c86613484565b5b1a60f81b60f81c9050611ca467cfca5678f933042b60c01b6126ea565b611cb86721b9d60e1769a0b760c01b6126ea565b611cd6858480611cc79061349a565b955060048460ff16901c612abb565b611cea676f201c13711c0b0160c01b6126ea565b611cfe67dc0cb5bc937abd7860c01b6126ea565b611d18858480611d0d9061349a565b9550600f8416612abb565b508080611d249061349a565b915050611c3e565b50611d4167b55456fcf6151cfc60c01b6126ea565b6002806014611d509190613332565b611d5a919061335a565b60ff1667ffffffffffffffff811115611d7657611d75612c44565b5b6040519080825280601f01601f191660200182016040528015611da85781602001600182028036833780820191505090505b509350611dbf67c32f0dff8f82c02460c01b6126ea565b7f300000000000000000000000000000000000000000000000000000000000000084600081518110611df457611df3613484565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611e37679d006e8d554d6f4f60c01b6126ea565b7f780000000000000000000000000000000000000000000000000000000000000084600181518110611e6c57611e6b613484565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611eaf67d4d6f75901f2618760c01b6126ea565b611ec367d4ab506eafd4a66560c01b6126ea565b60005b60026014611ed49190613332565b60ff16811015611f7157611ef2675aff96acd50353e760c01b6126ea565b838181518110611f0557611f04613484565b5b602001015160f81c60f81b85600283611f1e91906134b8565b81518110611f2f57611f2e613484565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080611f699061349a565b915050611ec6565b50611f8667ca78144763705c8260c01b6126ea565b611f9a6740eea7d6e857bfa060c01b6126ea565b505050919050565b6000611fb867db27e761f3c4634d60c01b6126ea565b611fcc67eeaf3c4a15e93cc860c01b6126ea565b611fe06781d5819a54a9dbad60c01b6126ea565b600054905090565b60055481565b60005481565b600061200a67b7dc5d659d4ce08960c01b6126ea565b61201e676bc916d32521199560c01b6126ea565b6120326747fefbb0151003bc60c01b6126ea565b60036002600060018560001c161461204b57600361204e565b60025b856040516020016120609291906134d6565b60405160208183030381529060405260405161207c91906132be565b602060405180830381855afa158015612099573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906120bc91906132dc565b6040516020016120cc91906132f8565b6040516020818303038152906040526040516120e891906132be565b602060405180830381855afa158015612105573d6000803e3d6000fd5b5050506040515160601b905092915050565b61212b67b9dceaebde088c5760c01b6126ea565b61213f6798be35e9c793677760c01b6126ea565b61215367eff1a2344edb1cd160c01b6126ea565b3447146121a05761216e674660c1c3493a168460c01b6126ea565b6040517fe538555100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6121b4678b065b8dc5752f1560c01b6126ea565b6121c867011c84eb5f2a5c9f60c01b6126ea565b6121dc67d272c9032219271360c01b6126ea565b6000340361222a576121f8671ddb7d3ebe835e7c60c01b6126ea565b6040517fd3a34e3b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61223e670140992624a7ee1960c01b6126ea565b61225267d5ed02e795f33ce160c01b6126ea565b61226667739de5e2e823e08760c01b6126ea565b80518251146122b5576122836766f63ddce4d1b42860c01b6126ea565b6040517ff4dbfb5a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6122c967a71dcea3a722249b60c01b6126ea565b6122dd67294941688f92295a60c01b6126ea565b6122f1671d54f8853f8b70d660c01b6126ea565b600061230767e7a168564736fb8960c01b6126ea565b61231b676bcbb5a8a416bf8460c01b6126ea565b60005b83518110156126305761233b676cba9898eeaa297560c01b6126ea565b61234f67282a1d059a6c5a9860c01b6126ea565b600060601b6bffffffffffffffffffffffff191684828151811061237657612375613484565b5b60200260200101516bffffffffffffffffffffffff1916036123d8576123a66713dabca1678defdc60c01b6126ea565b6040517f1c5fc20800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6123ec671e266256d729f2c960c01b6126ea565b6124006721985ffadf9d7e4260c01b6126ea565b61241467ff9f2ea816a8087960c01b6126ea565b600083828151811061242957612428613484565b5b60200260200101510361247c5761244a67d863c193a784bfea60c01b6126ea565b6040517f34b4782100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612490673c7f8d77adea7d2460c01b6126ea565b6124a467b7c7e172fd1ac28d60c01b6126ea565b6124b8670ab381424ca47e1260c01b6126ea565b6000600360008684815181106124d1576124d0613484565b5b60200260200101516bffffffffffffffffffffffff19166bffffffffffffffffffffffff1916815260200190815260200160002054146125515761251f670a97620ad4bc4a1760c01b6126ea565b6040517fb52e685100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b612565673a424a27c7d7685360c01b6126ea565b612579676b138fbafc33472060c01b6126ea565b82818151811061258c5761258b613484565b5b60200260200101518261259f91906134b8565b91506125b5672ba85b6f673b990560c01b6126ea565b8281815181106125c8576125c7613484565b5b6020026020010151600360008684815181106125e7576125e6613484565b5b60200260200101516bffffffffffffffffffffffff19166bffffffffffffffffffffffff1916815260200190815260200160002081905550806126299061349a565b905061231e565b50612645675750af3ba3a0e2c160c01b6126ea565b61265967d523c5afc0c004f060c01b6126ea565b8034146126a6576126746792f4d4809f30143460c01b6126ea565b6040517f970d408900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6126ba67e327c2b2b16182a660c01b6126ea565b505050565b60036020528060005260406000206000915090505481565b600460029054906101000a900460ff1681565b50565b6127016756ed8bf5aaf547c260c01b6126ea565b612715674ab6f96d5141dc2860c01b6126ea565b61272967b9a8d196c270dcab60c01b6126ea565b600060028261273891906131f4565b905061274e670220c8e04da3f6e160c01b6126ea565b61276267a901718f94fd458960c01b6126ea565b6000818361277091906134f7565b905061278667566537d7df71bdb760c01b6126ea565b61279a672fff336406da611560c01b6126ea565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015612802573d6000803e3d6000fd5b50612817673f3a6cf474e571be60c01b6126ea565b61282b67e604662f374527c960c01b6126ea565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015612893573d6000803e3d6000fd5b50505050565b600060019050919050565b6128b867ad2aed6a16111cf560c01b6126ea565b6128cc673eb796f5a27f338a60c01b6126ea565b6128e067d1665d9526f19e6960c01b6126ea565b60008290506128f9674866b772e750caa660c01b6126ea565b61290d6716c93d315e4c19b460c01b6126ea565b60005b82811015612ab35761292c67d60a6bb802777f8660c01b6126ea565b61293f669b2cb661a4e36460c01b6126ea565b600085826020811061295457612953613484565b5b1a60f81b60f81c905061297167d5b1e92c6552db7460c01b6126ea565b7f303132333435363738396162636465660000000000000000000000000000000060048260ff16901c60ff16601081106129ae576129ad613484565b5b1a60f81b8784806129be9061349a565b9550815181106129d1576129d0613484565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612a146719df0ed554e041e560c01b6126ea565b7f3031323334353637383961626364656600000000000000000000000000000000600f821660ff1660108110612a4d57612a4c613484565b5b1a60f81b878480612a5d9061349a565b955081518110612a7057612a6f613484565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350508080612aab9061349a565b915050612910565b505050505050565b612acf670a135274db437cea60c01b6126ea565b612ae367e30985313975aa0360c01b6126ea565b612af7673eae86fac74f2f9160c01b6126ea565b6000838381518110612b0c57612b0b613484565b5b602001015160f81c60f81b9050612b2d674c173b750631d66a60c01b6126ea565b612b4167c6a5810034d10a2f60c01b6126ea565b7f6100000000000000000000000000000000000000000000000000000000000000817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610158015612b97575060088260ff1610155b15612c1257612bb067df9512511e153c3160c01b6126ea565b612bc467d3be6fe18c39b1f160c01b6126ea565b602060f81b8118848481518110612bde57612bdd613484565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612c27565b612c26673c53594d72f03d7d60c01b6126ea565b5b50505050565b60018060a01b0381168114612c4157600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60006040519050601f19601f830116810181811067ffffffffffffffff82111715612c8857612c87612c44565b5b8060405250919050565b600082601f830112612ca357600080fd5b813567ffffffffffffffff811115612cbe57612cbd612c44565b5b612cd16020601f19601f84011601612c5a565b818152846020838601011115612ce657600080fd5b81602085016020830137600060208383010152809250505092915050565b60008135905060ff81168114612d1957600080fd5b919050565b600080600080600080600060e0888a031215612d3957600080fd5b8735612d4481612c2d565b80975050602088013567ffffffffffffffff811115612d6257600080fd5b612d6e8a828b01612c92565b9650506040880135945060608801359350612d8b60808901612d04565b925060a0880135915060c0880135905092959891949750929550565b600060208201905060018060a01b038316825292915050565b6000602082019050821515825292915050565b60006040820190508382528260208301529392505050565b60008060408385031215612dfe57600080fd5b82359150602083013590509250929050565b600060208201905060018060a01b038316825292915050565b600060208201905082825292915050565b60008060408385031215612e4d57600080fd5b8235612e5881612c2d565b80925050602083013567ffffffffffffffff811115612e7657600080fd5b612e8285828601612c92565b9150509250929050565b600060208201905082825292915050565b60005b83811015612ebb578082015181840152602081019050612ea0565b50600083830152505050565b6020815260008251806020840152612ee6816040850160208701612e9d565b6040601f19601f83011684010191505092915050565b600060208284031215612f0e57600080fd5b813567ffffffffffffffff811115612f2557600080fd5b612f3184828501612c92565b91505092915050565b600080600080600080600060e0888a031215612f5557600080fd5b8735612f6081612c2d565b80975050602088013567ffffffffffffffff811115612f7e57600080fd5b612f8a8a828b01612c92565b9650506040880135945060608801359350612fa760808901612d04565b925060a0880135915060c0880135905092959891949750929550565b600060208284031215612fd557600080fd5b8135612fe081612c2d565b8091505092915050565b60006020820190506bffffffffffffffffffffffff198316825292915050565b600067ffffffffffffffff82111561302557613024612c44565b5b60208260051b019050919050565b6000813590506bffffffffffffffffffffffff198116811461305457600080fd5b919050565b600082601f83011261306a57600080fd5b8135602061307f61307a8361300a565b612c5a565b808382528282019150828460051b87010193508684111561309f57600080fd5b8286015b848110156130be5780358352838301925083810190506130a3565b508094505050505092915050565b600080604083850312156130df57600080fd5b823567ffffffffffffffff808211156130f757600080fd5b818501915085601f83011261310b57600080fd5b8135602061312061311b8361300a565b612c5a565b808382528282019150828460051b87010193508984111561314057600080fd5b82860195505b838610156131685761315786613033565b825282820191508286019550613146565b809750505080870135935050508082111561318257600080fd5b5061318f85828601613059565b9150509250929050565b6000602082840312156131ab57600080fd5b6131b482613033565b905092915050565b634e487b7160e01b600052601160045260246000fd5b6000828202905081810483148215176131ee576131ed6131bc565b5b92915050565b60008261321157634e487b7160e01b600052601260045260246000fd5b828204905092915050565b600060808201905060018060a01b038616825284602083015283604083015282606083015295945050505050565b82815281602082015260006040820190509392505050565b60008160011c9050600182168061327a57607f821691505b60208210810361329a57634e487b7160e01b600052602260045260246000fd5b50919050565b600081516132b2818560208601612e9d565b80840191505092915050565b600082516132d0818460208701612e9d565b80830191505092915050565b6000602082840312156132ee57600080fd5b8151905092915050565b818152600060208201905092915050565b600060808201905085825260ff8516602083015283604083015282606083015295945050505050565b600060ff831660ff83160260ff81169150808214613353576133526131bc565b5b5092915050565b600060ff831660ff831601905060ff811115613379576133786131bc565b5b92915050565b806000525060006020600020905090565b600060ff60f81b808960f81b168352600167ffffffffffffffff19891681850152818860f81b166019850152601a9150600087548181841c9050838216806133d957607f821691505b602080831082036133f857634e487b7160e01b85526022600452602485fd5b816000811461340e57600181146134275761345c565b60ff198516888b01528784151585028b0101955061345c565b6134308d61337f565b60005b858110156134525781548a828e01015288820191508381019050613433565b505087848b010195505b505050505061347461346e82896132a0565b876132a0565b9350505050979650505050505050565b634e487b7160e01b600052603260045260246000fd5b6000801982036134ad576134ac6131bc565b5b600182019050919050565b60008282019050808211156134d0576134cf6131bc565b5b92915050565b60ff60f81b8360f81b16815281600182015260006021820190509392505050565b600082820390508181111561350f5761350e6131bc565b5b9291505056fea2646970667358221220ee5f8420db7dc535c382c61979f28ab41706c21ba0548cda5712d66ee4ba99ee64736f6c63430008140033";

type ClaimContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClaimContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ClaimContract__factory extends ContractFactory {
  constructor(...args: ClaimContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _lateClaimBeneficorAddressReinsertPot: AddressLike,
    _lateClaimBeneficorAddressDAO: AddressLike,
    _prefixStr: BytesLike,
    _dilute_s1_75_timestamp: BigNumberish,
    _dilute_s2_50_timestamp: BigNumberish,
    _dilute_s3_0_timestamp: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _lateClaimBeneficorAddressReinsertPot,
      _lateClaimBeneficorAddressDAO,
      _prefixStr,
      _dilute_s1_75_timestamp,
      _dilute_s2_50_timestamp,
      _dilute_s3_0_timestamp,
      overrides || {}
    );
  }
  override deploy(
    _lateClaimBeneficorAddressReinsertPot: AddressLike,
    _lateClaimBeneficorAddressDAO: AddressLike,
    _prefixStr: BytesLike,
    _dilute_s1_75_timestamp: BigNumberish,
    _dilute_s2_50_timestamp: BigNumberish,
    _dilute_s3_0_timestamp: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _lateClaimBeneficorAddressReinsertPot,
      _lateClaimBeneficorAddressDAO,
      _prefixStr,
      _dilute_s1_75_timestamp,
      _dilute_s2_50_timestamp,
      _dilute_s3_0_timestamp,
      overrides || {}
    ) as Promise<
      ClaimContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ClaimContract__factory {
    return super.connect(runner) as ClaimContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClaimContractInterface {
    return new Interface(_abi) as ClaimContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ClaimContract {
    return new Contract(address, _abi, runner) as unknown as ClaimContract;
  }
}
